AWSTemplateFormatVersion: "2010-09-09"
Description: "Proof of concept API with Cloudfront WAF and 3 endpoints with jwt auth"

Parameters:
    IssuerParameter: 
        Type: "String" 
        Description: "Add the directory (tenant) ID between the two // before 
                      v2.0 in the following url:
                      https://login.microsoftonline.com//v2.0"
    
    AdminAudParameter:
        Type: "String"
        Description: "Add the Application (client) ID for the admin app"

    DevAudParameter:
        Type: "String"
        Description: "Add the Application (client) ID for the developer app"

    FinancesAudParameter:
        Type: "String"
        Description: "Add the Application (client) ID for the financial staff app"

Resources:
    PoCAPI:
        Type: AWS::ApiGatewayV2::Api
        Properties:
            Name: PoCAPI
            ApiKeySelectionExpression: $request.header.x-api-key
            ProtocolType: HTTP
            RouteSelectionExpression: $request.method $request.path

    ApiGatewayV2Route:
        Type: "AWS::ApiGatewayV2::Route"
        Properties:
            ApiId: !Ref PoCAPI
            ApiKeyRequired: false
            AuthorizationScopes: 
              - "scope.finance"
              - "scope.admin"
            AuthorizationType: "JWT"
            AuthorizerId: !Ref ApiGatewayV2Authorizer
            RouteKey: "GET /transactions"
            Target: !Sub "integrations/${ApiGatewayV2Integration}"

    ApiGatewayV2Route2:
        Type: "AWS::ApiGatewayV2::Route"
        Properties:
            ApiId: !Ref PoCAPI
            ApiKeyRequired: false
            AuthorizationScopes: 
              - "scope.admin"
            AuthorizationType: "JWT"
            AuthorizerId: !Ref ApiGatewayV2Authorizer
            RouteKey: "GET /employees"
            Target: !Sub "integrations/${ApiGatewayV2Integration2}"

    ApiGatewayV2Route3:
        Type: "AWS::ApiGatewayV2::Route"
        Properties:
            ApiId: !Ref PoCAPI
            ApiKeyRequired: false
            AuthorizationScopes: 
              - "scope.admin"
              - "scope.dev"
            AuthorizationType: "JWT"
            AuthorizerId: !Ref ApiGatewayV2Authorizer
            RouteKey: "GET /devprojects"
            Target: !Sub "integrations/${ApiGatewayV2Integration3}"

    ApiGatewayV2Integration:
        Type: "AWS::ApiGatewayV2::Integration"
        Properties:
            ApiId: !Ref PoCAPI
            ConnectionType: "INTERNET"
            IntegrationMethod: "GET"
            IntegrationType: "HTTP_PROXY"
            IntegrationUri: "https://raw.githubusercontent.com/NBIMBachelor/Incorporating-Digital-Identities-Into-APIs/main/MockData/mock_transactions.json"
            TimeoutInMillis: 30000
            PayloadFormatVersion: "1.0"

    ApiGatewayV2Integration2:
        Type: "AWS::ApiGatewayV2::Integration"
        Properties:
            ApiId: !Ref PoCAPI
            ConnectionType: "INTERNET"
            IntegrationMethod: "ANY"
            IntegrationType: "HTTP_PROXY"
            IntegrationUri: "https://raw.githubusercontent.com/NBIMBachelor/Incorporating-Digital-Identities-Into-APIs/main/MockData/mock_employees.json"
            TimeoutInMillis: 30000
            PayloadFormatVersion: "1.0"

    ApiGatewayV2Integration3:
        Type: "AWS::ApiGatewayV2::Integration"
        Properties:
            ApiId: !Ref PoCAPI
            ConnectionType: "INTERNET"
            IntegrationMethod: "ANY"
            IntegrationType: "HTTP_PROXY"
            IntegrationUri: "https://raw.githubusercontent.com/NBIMBachelor/Incorporating-Digital-Identities-Into-APIs/main/MockData/mock_devprojects.json"
            TimeoutInMillis: 30000
            PayloadFormatVersion: "1.0"

    ApiGatewayV2Authorizer:
        Type: "AWS::ApiGatewayV2::Authorizer"
        Properties:
            ApiId: !Ref PoCAPI
            AuthorizerType: "JWT"
            IdentitySource: 
              - "$request.header.Authorization"
            Name: "JWTAuth"
            JwtConfiguration: 
                Audience: 
                  - !Ref AdminAudParameter
                  - !Ref DevAudParameter
                  - !Ref FinancesAudParameter
                Issuer: !Ref IssuerParameter

    ApiGatewayV2Stage:
        Type: "AWS::ApiGatewayV2::Stage"
        Properties:
            StageName: "$default"
            StageVariables: {}
            ApiId: !Ref PoCAPI
            RouteSettings: {}
            DefaultRouteSettings: 
                DetailedMetricsEnabled: false
            AutoDeploy: true

    BankingWAF:
        Type: AWS::WAFv2::WebACL
        Properties:
            DefaultAction:
               Allow: {}
            Scope: CLOUDFRONT
            VisibilityConfig:
                SampledRequestsEnabled: true
                CloudWatchMetricsEnabled: true
                MetricName: WebACLBotAndSecurityProtection
            Rules:
              - Name: AWSManagedRulesBotControlRuleSet
                Priority: 11
                Statement:
                    ManagedRuleGroupStatement:
                        VendorName: AWS
                        Name: AWSManagedRulesBotControlRuleSet
                OverrideAction:
                    None: {}
                VisibilityConfig:
                    SampledRequestsEnabled: true
                    CloudWatchMetricsEnabled: true
                    MetricName: BotControlRule
              - Name: AWSManagedRulesAdminProtectionRuleSet
                Priority: 21
                Statement:
                    ManagedRuleGroupStatement:
                        VendorName: AWS
                        Name: AWSManagedRulesAdminProtectionRuleSet
                OverrideAction:
                    None: {}
                VisibilityConfig:
                    SampledRequestsEnabled: true
                    CloudWatchMetricsEnabled: true
                    MetricName: AdminProtectionRule
              - Name: AWSManagedRulesAmazonIpReputationList
                Priority: 3
                Statement:
                    ManagedRuleGroupStatement:
                        VendorName: AWS
                        Name: AWSManagedRulesAmazonIpReputationList
                OverrideAction:
                    None: {}
                VisibilityConfig:
                    SampledRequestsEnabled: true
                    CloudWatchMetricsEnabled: true
                    MetricName: AmazonIpReputationListRule
              - Name: AWSManagedRulesAnonymousIpList
                Priority: 4
                Statement:
                    ManagedRuleGroupStatement:
                        VendorName: AWS
                        Name: AWSManagedRulesAnonymousIpList
                OverrideAction:
                    None: {}
                VisibilityConfig:
                    SampledRequestsEnabled: true
                    CloudWatchMetricsEnabled: true
                    MetricName: AnonymousIpListRule
              - Name: AWSManagedRulesCommonRuleSet
                Priority: 5
                Statement:
                    ManagedRuleGroupStatement:
                        VendorName: AWS
                        Name: AWSManagedRulesCommonRuleSet
                OverrideAction:
                    None: {}
                VisibilityConfig:
                    SampledRequestsEnabled: true
                    CloudWatchMetricsEnabled: true
                    MetricName: CommonRuleSet
              - Name: AWSManagedRulesKnownBadInputsRuleSet
                Priority: 6
                Statement:
                    ManagedRuleGroupStatement:
                        VendorName: AWS
                        Name: AWSManagedRulesKnownBadInputsRuleSet
                OverrideAction:
                    None: {}
                VisibilityConfig:
                    SampledRequestsEnabled: true
                    CloudWatchMetricsEnabled: true
                    MetricName: KnownBadInputsRule
              - Name: AWSManagedRulesLinuxRuleSet
                Priority: 7
                Statement:
                    ManagedRuleGroupStatement:
                        VendorName: AWS
                        Name: AWSManagedRulesLinuxRuleSet
                OverrideAction:
                    None: {}
                VisibilityConfig:
                    SampledRequestsEnabled: true
                    CloudWatchMetricsEnabled: true
                    MetricName: LinuxRuleSet

    CloudFrontDistribution:
        Type: "AWS::CloudFront::Distribution"
        Properties:
            DistributionConfig: 
                WebACLId: !Ref BankingWAF
                Origins: 
                  - OriginShield:
                        Enabled: true
                        OriginShieldRegion: eu-west-2
                    ConnectionAttempts: 3
                    ConnectionTimeout: 10
                    CustomOriginConfig: 
                        HTTPPort: 80
                        HTTPSPort: 443
                        OriginKeepaliveTimeout: 5
                        OriginProtocolPolicy: "https-only"
                        OriginReadTimeout: 30
                        OriginSSLProtocols: 
                          - "TLSv1.2"
                    DomainName: !Sub "${PoCAPI}.execute-api.${AWS::Region}.amazonaws.com"
                    Id: !Sub "${PoCAPI}.execute-api.${AWS::Region}.amazonaws.com"
                    OriginPath: ""
                
                DefaultCacheBehavior: 
                    AllowedMethods: 
                      - "HEAD"
                      - "GET"
                    CachedMethods: 
                      - "HEAD"
                      - "GET"
                    Compress: true
                    CachePolicyId: "4135ea2d-6df8-44a3-9df3-4b5a84be39ad"
                    OriginRequestPolicyId: "b689b0a8-53d0-40ab-baf2-68738e2966ac"
                    SmoothStreaming: false
                    TargetOriginId: !Sub "${PoCAPI}.execute-api.${AWS::Region}.amazonaws.com"
                    ViewerProtocolPolicy: "redirect-to-https"
                Comment: ""
                PriceClass: "PriceClass_All"
                Enabled: true
                Restrictions: 
                    GeoRestriction: 
                        RestrictionType: "none"
                WebACLId: 
                    !GetAtt BankingWAF.Arn
                HttpVersion: "http2"
                DefaultRootObject: ""
                IPV6Enabled: true